{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layouts/InputGroup.js","components/contacts/AddContacts.js","components/contacts/EditContact.js","components/layouts/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["context","React","createContext","reducer","state","action","type","Contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Contact","showContactInfo","onClickDelete","a","delete","Consumer","className","onClick","style","color","fontSize","cursor","name","to","bind","email","phone","key","InputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContacts","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updateContact","match","params","put","Header","src","height","width","alt","branding","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Test","title","body","fetch","then","response","json","App","basename","process","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.ebd3c9f9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { act } from \"@testing-library/react\";\r\n\r\nexport const context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        Contacts: state.Contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        Contacts: [action.payload, ...state.Contacts],\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        Contacts: state.Contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload): contact)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nclass Provider extends Component {\r\n  state = {\r\n    Contacts: [\r\n      // {\r\n      //   id: 1,\r\n      //   name: \"Ayush Gupta\",\r\n      //   email: \"ayush4351@gmail.com\",\r\n      //   phone: 8299021887,\r\n      //   address: \"Lakhimpur Kheri\",\r\n      // },\r\n      // {\r\n      //   id: 2,\r\n      //   name: \"Saffan Khan\",\r\n      //   email: \"ksaffan190@gmail.com\",\r\n      //   phone: 9557391315,\r\n      //   address: \"Aonla\",\r\n      // },\r\n      // {\r\n      //   id: 3,\r\n      //   name: \"Soham Nandi\",\r\n      //   email: \"sohamnandi007@gmail.com\",\r\n      //   phone: 9557391315,\r\n      //   address: \"Bahadur Garh\",\r\n      // },\r\n      // {\r\n      //   id: 4,\r\n      //   name: \"Arpit Porwal\",\r\n      //   email: \"arpit.porwal@vormiir.com\",\r\n      //   phone: 9557391315,\r\n      //   address: \"Kanpur\",\r\n      // },\r\n      // {\r\n      //   id: 5,\r\n      //   name: \"Anish Kumar\",\r\n      //   email: \"anish.kumar@vormiir.com\",\r\n      //   phone: 9557391315,\r\n      //   address: \"Arrah\",\r\n      // },\r\n      // {\r\n      //   id: 6,\r\n      //   name: \"Jayendra Singh\",\r\n      //   email: \"jayendra.singh@vormiir.com\",\r\n      //   phone: 9557391315,\r\n      //   address: \"Lakhimpur Kheri\",\r\n      // },\r\n    ],\r\n    dispatch: (action) => this.setState((state) => reducer(state, action)),\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ Contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Provider;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../App.css\";\r\nimport { context } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: true,\r\n  };\r\n\r\n  onClickDelete = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    //console.log(id, dispatch);\r\n  };\r\n\r\n  render() {\r\n    //we can destructure the prop if we don't want to use this.props everytime\r\n    const { id } = this.props;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <context.Consumer>\r\n        {(context) => {\r\n          const { dispatch } = context;\r\n          return (\r\n            <div className=\"container mt-3\">\r\n              <div className=\"card mb-3\">\r\n                <div className=\"card-header\">\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col-md-10 col-lg-10\"\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          showContactInfo: !this.state.showContactInfo,\r\n                        });\r\n                      }}\r\n                    >\r\n                      <h4\r\n                        style={{\r\n                          color: \"#000\",\r\n                          fontSize: \"20px\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        {this.props.name} <i className=\"fas fa-sort-down\"></i>\r\n                      </h4>\r\n                    </div>\r\n                    <div className=\"col-md-2 col-lg-2\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-6 col-lg-6 text-right\">\r\n                          <Link to={`contact/edit/${id}`}>\r\n                            <i\r\n                              className=\"fas fa-pen\"\r\n                              style={{ color: \"blue\", cursor: \"pointer\" }}\r\n                            ></i>\r\n                          </Link>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-lg-6 text-left\">\r\n                          <i\r\n                            className=\"fas fa-trash\"\r\n                            style={{ color: \"red\", cursor: \"pointer\" }}\r\n                            onClick={this.onClickDelete.bind(\r\n                              this,\r\n                              id,\r\n                              dispatch\r\n                            )}\r\n                          ></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {showContactInfo ? null : (\r\n                  <div className=\"card-body\">\r\n                    <ul className=\"list-group\">\r\n                      <li className=\"list-group-item\">\r\n                        Email:\r\n                        <span className=\"details\">{this.props.email}</span>\r\n                      </li>\r\n                      <li className=\"list-group-item\">\r\n                        Phone number:\r\n                        <span className=\"details\">{this.props.phone}</span>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </context.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { context } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <context.Consumer>\r\n        {(context) => {\r\n          const { Contacts } = context;\r\n          return (\r\n            <div className=\"container\">\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              <div className=\"card mb-3\">\r\n                {Contacts.map((contact) => (\r\n                  <Contact\r\n                    key={contact.id}\r\n                    id={contact.id}\r\n                    name={contact.name}\r\n                    email={contact.email}\r\n                    phone={contact.phone}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </context.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst InputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\n\r\nexport default InputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { context } from \"../../context\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\nimport InputGroup from \"../layouts/InputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContacts extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for validation\r\n    if (name === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          name: \"Name is required\",\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          email: \"Email is required\",\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          phone: \"Phone is required\",\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    //Clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <context.Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3 mt-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  {/* <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Enter name...\"\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div> */}\r\n                  <InputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Enter Name...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <InputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Enter Email...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <InputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    placeholder=\"Enter Phone...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-dark btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </context.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContacts;\r\n","import React, { Component } from \"react\";\r\nimport { context } from \"../../context\";\r\nimport InputGroup from \"../layouts/InputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    });\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for validation\r\n    if (name === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          name: \"Name is required\",\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          email: \"Email is required\",\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          phone: \"Phone is required\",\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone, \r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\r\n\r\n    dispatch({type: 'UPDATE_CONTACT', payload: res.data})\r\n\r\n    //Clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <context.Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3 mt-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  {/* <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Enter name...\"\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div> */}\r\n                  <InputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Enter Name...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <InputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Enter Email...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <InputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    placeholder=\"Enter Phone...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-dark btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </context.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n      <Link to=\"/\" className=\"navbar-brand\">\r\n        <img\r\n          src=\"https://getbootstrap.com/docs/4.4/assets/brand/bootstrap-solid.svg\"\r\n          height=\"30\"\r\n          width=\"30\"\r\n          alt=\"branding_logo\"\r\n        />{\" \"}\r\n        {props.branding}\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Togglenavigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/\" className=\"nav-link\">\r\n              <i className=\"fas fa-home\"></i> Home\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/contact/add\" className=\"nav-link\">\r\n              <i className=\"fas fa-plus\"></i> Add Contact\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/about\" className=\"nav-link\">\r\n              <i className=\"fas fa-question\"></i>About\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n    return(\r\n        <div className=\"container\">\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage your contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default () => {\r\n    return(\r\n        <div className=\"container\">\r\n            <h1 className=\"display-4\"> <span className=\"text-danger\">404,</span> Not Found </h1>\r\n            <p className=\"lead\">Sorry, The Page you are looking for does not exist</p>\r\n        </div>\r\n    )\r\n}","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then((response) => response.json())\r\n      .then((data) => this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n      }));\r\n  }\r\n\r\n  // componentWillMount() {\r\n  //     console.log('ComponentWillMount');\r\n  // }\r\n\r\n  // componentDidUpdate() {\r\n  //     console.log('ComponentDidUpdate');\r\n  // }\r\n\r\n  // componentWillUpdate() {\r\n  //     console.log('ComponentWillUpdate');\r\n  // }\r\n\r\n  // componentWillReceiveProps(nextProps, nextState) {\r\n  //     console.log('ComponentWillRecieveProps');\r\n  // }\r\n\r\n  // static getDerivedStateFromProps(nextProps, prevState) {\r\n  //     return {\r\n  //         test: 'something'\r\n  //     };\r\n  // }\r\n\r\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n  //     console.log9('getSnapshotbeforeUpdate');\r\n  // }\r\n\r\n  render() {\r\n      const {title, body} = this.state\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React from \"react\";\r\nimport Contacts from \"./components/contacts/Contacts\";\r\nimport AddContacts from \"./components/contacts/AddContacts\";\r\nimport EditContact from \"./components/contacts/EditContact\";\r\nimport Header from \"./components/layouts/Header\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Provider from \"./context\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport About from \"./components/pages/About\";\r\nimport NotFound from \"./components/pages/NotFound\";\r\nimport Test from \"./components/test/Test\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <Header branding=\"Vormiir Contact Manager\" />\r\n          <div className=\"container\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Contacts}></Route>\r\n              <Route exact path=\"/contact/add\" component={AddContacts}></Route>\r\n              <Route exact path=\"/contact/edit/:id\" component={EditContact}></Route>\r\n              <Route exact path=\"/about\" component={About}></Route>\r\n              <Route exact path=\"/test\" component={Test}></Route>\r\n              <Route component={NotFound}></Route>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}